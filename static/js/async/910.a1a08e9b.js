"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([["910"],{715:function(e,r,n){n.r(r),n.d(r,{default:()=>o});var t=n(4246),s=n(980);function a(e){let r=Object.assign({h1:"h1",a:"a",h2:"h2",pre:"pre",code:"code",ul:"ul",li:"li",h3:"h3",p:"p"},(0,s.ah)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(r.h1,{id:"公共hooks",children:[(0,t.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#公共hooks",children:"#"}),"公共hooks"]}),"\n",(0,t.jsxs)(r.h2,{id:"安装",children:[(0,t.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#安装",children:"#"}),"安装"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"npm install @carefrees/form-utils-react-hooks # yarn add @carefrees/form-utils-react-hooks # pnpm add @carefrees/form-utils-react-hooks\n"})}),"\n",(0,t.jsxs)(r.h2,{id:"form表单",children:[(0,t.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#form表单",children:"#"}),"Form表单"]}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"useForm: 初始化表单实例"}),"\n",(0,t.jsx)(r.li,{children:"useFormInstance: 子项中获取表单实例"}),"\n",(0,t.jsx)(r.li,{children:"useFormItem: 初始化表单项实例"}),"\n",(0,t.jsx)(r.li,{children:"useFormItemInstance: 子项中获取表单项实例"}),"\n",(0,t.jsx)(r.li,{children:"useFormList: 初始化表单List实例"}),"\n",(0,t.jsx)(r.li,{children:"useFormListInstance: 子项中获取表单List实例"}),"\n",(0,t.jsx)(r.li,{children:"useMultipleForm: 初始化 多表单收集 实例"}),"\n",(0,t.jsx)(r.li,{children:"useMultipleFormInstance: 子项中获取 多表单收集 实例"}),"\n",(0,t.jsx)(r.li,{children:"useWatch: 监听表单某个值变化"}),"\n",(0,t.jsx)(r.li,{children:"useAttrs: 获取布局公共属性"}),"\n",(0,t.jsx)(r.li,{children:"useFormItemParentName: 获取表单父级name"}),"\n",(0,t.jsx)(r.li,{children:"useHtmlFor: 生成label标签的for属性"}),"\n"]}),"\n",(0,t.jsxs)(r.h3,{id:"注册",children:[(0,t.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#注册",children:"#"}),"注册"]}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"useRegisterForm: 注册表单实例到多表单收集实例中"}),"\n",(0,t.jsx)(r.li,{children:"useRegisterFormHideItem: 注册表单隐藏表单项到表单实例中"}),"\n",(0,t.jsx)(r.li,{children:"useRegisterFormItem: 注册表单项到表单实例中"}),"\n",(0,t.jsx)(r.li,{children:"useRegisterFormList: 注册表单List到表单实例中"}),"\n"]}),"\n",(0,t.jsxs)(r.h3,{id:"context",children:[(0,t.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#context",children:"#"}),"Context"]}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"FormInstanceContext: 表单实例"}),"\n",(0,t.jsx)(r.li,{children:"FormItemInstanceContext: 表单项实例"}),"\n",(0,t.jsx)(r.li,{children:"FormListInstanceContext: 表单List实例"}),"\n",(0,t.jsx)(r.li,{children:"MultipleFormInstanceContext: 多表单收集实例"}),"\n",(0,t.jsx)(r.li,{children:"FormItemParentNameContext: 表单父级name"}),"\n",(0,t.jsx)(r.li,{children:"AttrsContext: 布局公共属性"}),"\n"]}),"\n",(0,t.jsxs)(r.h3,{id:"provider",children:[(0,t.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#provider",children:"#"}),"Provider"]}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"MultipleFormProvider: 多表单收集 Provider"}),"\n"]}),"\n",(0,t.jsxs)(r.h2,{id:"类型",children:[(0,t.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#类型",children:"#"}),"类型"]}),"\n",(0,t.jsxs)(r.h3,{id:"useform",children:[(0,t.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#useform",children:"#"}),"useForm"]}),"\n",(0,t.jsx)(r.p,{children:"初始化表单实例"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-ts",children:"import { FormInstanceBase } from '@carefrees/form-utils';\n/**表单实例 Context */\nexport declare const FormInstanceContext: import(\"react\").Context<FormInstanceBase<any>>;\n/**子项中获取表单实例*/\nexport declare function useFormInstance<T = any>(): FormInstanceBase<T>;\n/**初始化表单实例*/\nexport declare function useForm<T = any>(form?: FormInstanceBase<T>): FormInstanceBase<T>;\n"})}),"\n",(0,t.jsxs)(r.h3,{id:"useformitem",children:[(0,t.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#useformitem",children:"#"}),"useFormItem"]}),"\n",(0,t.jsx)(r.p,{children:"初始化表单项实例"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-ts",children:"import { FormItemInstanceBase } from '@carefrees/form-utils';\n/**表单项实例 Context */\nexport declare const FormItemInstanceContext: import(\"react\").Context<FormItemInstanceBase>;\n/**子项中获取表单项实例*/\nexport declare const useFormItemInstance: () => FormItemInstanceBase;\n/**s初始化 表单项实例*/\nexport declare const useFormItem: (formItem?: FormItemInstanceBase) => FormItemInstanceBase;\n"})}),"\n",(0,t.jsxs)(r.h3,{id:"useformlist",children:[(0,t.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#useformlist",children:"#"}),"useFormList"]}),"\n",(0,t.jsx)(r.p,{children:"初始化表单List实例"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-ts",children:"import { FormListInstanceBase } from '@carefrees/form-utils';\n/**表单List实例 Context */\nexport declare const FormListInstanceContext: import(\"react\").Context<FormListInstanceBase>;\n/**子项中获取表单List实例*/\nexport declare const useFormListInstance: () => FormListInstanceBase;\n/**初始化 表单List实例*/\nexport declare const useFormList: (formList?: FormListInstanceBase) => FormListInstanceBase;\n\n"})}),"\n",(0,t.jsxs)(r.h3,{id:"usemultipleform",children:[(0,t.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#usemultipleform",children:"#"}),"useMultipleForm"]}),"\n",(0,t.jsx)(r.p,{children:"初始化 多表单收集 实例"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-ts",children:'import { MultipleInstanceBase } from \'@carefrees/form-utils\';\n/**多表单收集 Context */\nexport declare const MultipleFormInstanceContext: import("react").Context<MultipleInstanceBase>;\n/**子项中获取 多表单收集 实例*/\nexport declare const useMultipleFormInstance: () => MultipleInstanceBase;\n/**初始化 多表单收集 实例*/\nexport declare const useMultipleForm: (multipleForm?: MultipleInstanceBase) => MultipleInstanceBase;\nexport interface MultipleFormProviderProps {\n    children: React.ReactNode;\n    multipleForm?: MultipleInstanceBase;\n}\n/**多表单收集 Provider */\nexport declare const MultipleFormProvider: (props: MultipleFormProviderProps) => import("react").FunctionComponentElement<import("react").ProviderProps<MultipleInstanceBase>>;\n'})}),"\n",(0,t.jsxs)(r.h3,{id:"usewatch",children:[(0,t.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#usewatch",children:"#"}),"useWatch"]}),"\n",(0,t.jsx)(r.p,{children:"监听表单某个值变化"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-ts",children:"import { FormInstanceBase } from '@carefrees/form-utils';\nexport declare class WatchInstanceBase {\n    /**监听字段*/\n    name: string;\n    /**表单实例*/\n    form: FormInstanceBase;\n    /**老值*/\n    oldValue: any;\n    /**更新值*/\n    dispatch: (value: any) => void;\n    /**回调*/\n    callBack?: (value: any, form: FormInstanceBase) => void;\n    /**更新*/\n    updated: () => void;\n}\n/**\n * 字段监听\n */\nexport declare const useWatch: (name: string, form: FormInstanceBase, callBack?: (value: any, form: FormInstanceBase) => void) => [any, FormInstanceBase, WatchInstanceBase];\n\n"})}),"\n",(0,t.jsxs)(r.h3,{id:"useattrspch5taro",children:[(0,t.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#useattrspch5taro",children:"#"}),"useAttrs(pc、h5、taro)"]}),"\n",(0,t.jsx)(r.p,{children:"获取布局公共属性,在react-native中移除了className属性"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-ts",children:"export interface AttrsOptions {\n    /**列数据*/\n    colCount?: number;\n    /**规则校验失败错误提示位置*/\n    errorLayout?: 'left-bottom' | 'right-bottom' | 'top-right' | 'top-left';\n    /**\n     * label显示模式\n     * @platform taro 支持 between\n     */\n    labelMode?: 'left' | 'top' | 'between' | 'hide';\n    /**是否显示label后的冒号*/\n    showColon?: boolean;\n    /**表单项 className*/\n    formItemClassName?: string;\n    /**表单项 style*/\n    formItemStyle?: React.CSSProperties;\n    /**表单项 label  className*/\n    formItemLabelClassName?: string;\n    /**表单项 label  style*/\n    formItemLabelStyle?: React.CSSProperties;\n    /**\n     * 输入框底部边框\n     * @platform taro\n     */\n    inputBordered?: boolean;\n}\n/**公共属性 Context */\nexport declare const AttrsContext: import(\"react\").Context<AttrsOptions>;\n/**子项中获取公共属性*/\nexport declare const useAttrs: () => AttrsOptions;\n"})}),"\n",(0,t.jsxs)(r.h3,{id:"useformitemparentname",children:[(0,t.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#useformitemparentname",children:"#"}),"useFormItemParentName"]}),"\n",(0,t.jsx)(r.p,{children:"获取表单父级name"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-ts",children:'export declare const FormItemParentNameContext: import("react").Context<{\n    name: string;\n    sort: string;\n}>;\nexport interface FormItemParentNamOptions {\n    /**字段*/\n    name: string;\n    /**排序*/\n    sort?: string;\n    /**是否拼接父级字段*/\n    isJoinParentField?: boolean;\n}\ninterface FormItemParentNameProviderProps extends Omit<FormItemParentNamOptions, \'isJoinParentField\'> {\n    children?: React.ReactNode;\n}\nexport declare const FormItemParentNameProvider: (props: FormItemParentNameProviderProps) => import("react").FunctionComponentElement<import("react").ProviderProps<{\n    name: string;\n    sort: string;\n}>>;\n/**表单项获取父级字段*/\nexport declare const useFormItemParentName: (options: FormItemParentNamOptions) => {\n    newName: string;\n    newSort: string;\n    parentItem: {\n        name: string;\n        sort: string;\n    };\n    parentName: string;\n};\n'})}),"\n",(0,t.jsxs)(r.h3,{id:"usehtmlfor",children:[(0,t.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#usehtmlfor",children:"#"}),"useHtmlFor"]}),"\n",(0,t.jsx)(r.p,{children:"生成label标签的for属性"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-ts",children:"export declare const useHtmlFor: (suffix: string) => string;\n"})}),"\n",(0,t.jsxs)(r.h3,{id:"useregisterform",children:[(0,t.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#useregisterform",children:"#"}),"useRegisterForm"]}),"\n",(0,t.jsx)(r.p,{children:"注册表单实例到多表单收集实例中"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-ts",children:"import { FormInstanceBase } from '@carefrees/form-utils';\n/**注册表单实例到多表单收集实例中*/\nexport declare const useRegisterForm: (form: FormInstanceBase, name?: string) => import(\"@carefrees/form-utils\").MultipleInstanceBase;\n\n"})}),"\n",(0,t.jsxs)(r.h3,{id:"useregisterformhideitem",children:[(0,t.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#useregisterformhideitem",children:"#"}),"useRegisterFormHideItem"]}),"\n",(0,t.jsx)(r.p,{children:"注册表单隐藏表单项到表单实例中"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-ts",children:"import { RegisterFormItemOptions } from './register.FormItem';\ninterface RegisterFormHideItemOptions extends Omit<RegisterFormItemOptions, 'rules'> {\n}\n/**注册表单隐藏表单项到表单实例中*/\nexport declare const useRegisterFormHideItem: (options: RegisterFormHideItemOptions) => {\n    form: import(\"@carefrees/form-utils\").FormInstanceBase<any>;\n    isHide: any;\n};\n"})}),"\n",(0,t.jsxs)(r.h3,{id:"useregisterformitem",children:[(0,t.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#useregisterformitem",children:"#"}),"useRegisterFormItem"]}),"\n",(0,t.jsx)(r.p,{children:"注册表单项到表单实例中"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-ts",children:"/**\n * @description 注册组件\n */\nimport { RuleInstanceBase } from '@carefrees/form-utils';\nimport type { RuleItem } from 'async-validator';\nexport interface RegisterFormItemOptions {\n    /**字段*/\n    name: string;\n    /**规则*/\n    rules?: RuleItem[];\n    /**排序值*/\n    sort?: string;\n    /**是否拼接父级字段*/\n    isJoinParentField?: boolean;\n}\n/**注册表单项到表单实例中*/\nexport declare const useRegisterFormItem: (options: RegisterFormItemOptions) => {\n    ruleInstance: RuleInstanceBase;\n    formItemInstance: import(\"@carefrees/form-utils\").FormItemInstanceBase;\n    form: import(\"@carefrees/form-utils\").FormInstanceBase<any>;\n    parentName: string;\n    newName: string;\n};\n"})}),"\n",(0,t.jsxs)(r.h3,{id:"useregisterformlist",children:[(0,t.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#useregisterformlist",children:"#"}),"useRegisterFormList"]}),"\n",(0,t.jsx)(r.p,{children:"注册表单List到表单实例中"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-ts",children:'import { RegisterFormItemOptions } from \'./register.FormItem\';\nexport interface RegisterFormListOptions extends RegisterFormItemOptions {\n}\n/**注册表单List到表单实例中*/\nexport declare const useRegisterFormList: (options: RegisterFormListOptions) => {\n    ruleInstance: import("@carefrees/form-utils").RuleInstanceBase;\n    formItemInstance: import("@carefrees/form-utils").FormItemInstanceBase;\n    formListInstance: import("@carefrees/form-utils").FormListInstanceBase;\n};\n\n'})})]})}function i(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:r}=Object.assign({},(0,s.ah)(),e.components);return r?(0,t.jsx)(r,Object.assign({},e,{children:(0,t.jsx)(a,e)})):a(e)}let o=i;i.__RSPRESS_PAGE_META={},i.__RSPRESS_PAGE_META["react%2Fhooks.md"]={toc:[{id:"安装",text:"安装",depth:2},{id:"form表单",text:"Form表单",depth:2},{id:"注册",text:"注册",depth:3},{id:"context",text:"Context",depth:3},{id:"provider",text:"Provider",depth:3},{id:"类型",text:"类型",depth:2},{id:"useform",text:"useForm",depth:3},{id:"useformitem",text:"useFormItem",depth:3},{id:"useformlist",text:"useFormList",depth:3},{id:"usemultipleform",text:"useMultipleForm",depth:3},{id:"usewatch",text:"useWatch",depth:3},{id:"useattrspch5taro",text:"useAttrs(pc、h5、taro)",depth:3},{id:"useformitemparentname",text:"useFormItemParentName",depth:3},{id:"usehtmlfor",text:"useHtmlFor",depth:3},{id:"useregisterform",text:"useRegisterForm",depth:3},{id:"useregisterformhideitem",text:"useRegisterFormHideItem",depth:3},{id:"useregisterformitem",text:"useRegisterFormItem",depth:3},{id:"useregisterformlist",text:"useRegisterFormList",depth:3}],title:"公共hooks",headingTitle:"公共hooks",frontmatter:{}}}}]);