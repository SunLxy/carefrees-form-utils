(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([["855"],{9165:function(){},1792:function(e,t,n){"use strict";n.d(t,{xJ:()=>eF,j_:()=>eh,Wb:()=>eb,fR:()=>ex,l0:()=>eI,qo:()=>ei,yB:()=>q,lt:()=>eu,cI:()=>Z});var r=n(4246),a=n(7378),s=n(8191),o=n.n(s);n(9165);let i=/\\(\\)?/g,l=RegExp("[^.[\\]]+|\\[(?:([^\"'][^[]*)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))","g"),m=e=>{let t=[];return 46===e.charCodeAt(0)&&t.push(""),e.replace(l,(e,n,r,a)=>{let s=e;r?s=a.replace(i,"$1"):n&&(s=n.trim()),t.push(s)}),t};function c(e){let t=typeof e;return"symbol"===t||"object"===t&&null!=e&&"[object Symbol]"===function(e){let t=Object.prototype.toString;return null==e?void 0===e?"[object Undefined]":"[object Null]":t.call(e)}(e)}let d=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,u=/^\w*$/;function h(e,t){return Array.isArray(e)?e:!function(e,t){if(Array.isArray(e))return!1;let n=typeof e;return!!("number"===n||"boolean"===n||null==e||c(e))||u.test(e)||!d.test(e)||null!=t&&e in Object(t)}(e,t)?m(e):[e]}let f=1/0;function p(e){if("string"==typeof e||c(e))return e;let t=`${e}`;return"0"===t&&1/e==-f?"-0":t}function g(e){let t=typeof e;return null!=e&&("object"===t||"function"===t)}let y=/^(?:0|[1-9]\d*)$/;function F(e,t){let n=typeof e;return!!(t=null==t?0x1fffffffffffff:t)&&("number"===n||"symbol"!==n&&y.test(e))&&e>-1&&e%1==0&&e<t}function b(e,t,n){"__proto__"===t?Object.defineProperty(e,t,{configurable:!0,enumerable:!0,value:n,writable:!0}):e[t]=n}let x=Object.prototype.hasOwnProperty;function I(e,t){return null!=e&&x.call(e,t)}function j(e){return null!=e&&"object"==typeof e}var R=Object.prototype,v=R.toString,w=Symbol?Symbol.toStringTag:void 0,v=R.toString;function S(e){return j(e)&&"[object Arguments]"==function(e){return null==e?void 0===e?"[object Undefined]":"[object Null]":w&&w in Object(e)?function(e){var t=x.call(e,w),n=e[w];try{e[w]=void 0;var r=!0}catch(e){}var a=v.call(e);return r&&(t?e[w]=n:delete e[w]),a}(e):v.call(e)}(e)}let N=R.propertyIsEnumerable;var C=S(function(){return arguments}())?S:function(e){return j(e)&&x.call(e,"callee")&&!N.call(e,"callee")};function D(e,t){return null!=e&&function(e,t,n){t=h(t,e);for(var r,a=-1,s=t.length,o=!1;++a<s;){var i=p(t[a]);if(!(o=null!=e&&n(e,i)))break;e=e[i]}return o||++a!=s?o:!!(s=null==e?0:e.length)&&"number"==typeof(r=s)&&r>-1&&r%1==0&&r<=0x1fffffffffffff&&F(i,s)&&(Array.isArray(e)||C(e))}(e,t,I)}let M=(e,t,n)=>{let r=null==e?void 0:function(e,t){t=h(t,e);let n=0,r=t.length;for(;null!=e&&n<r;)e=e[p(t[n++])];return n&&n===r?e:void 0}(e,t);return void 0===r?n:r};function L(e,t,n){return null==e?e:function(e,t,n,r){if(!g(e))return e;let a=(t=h(t,e)).length,s=a-1,o=-1,i=e;for(;null!=i&&++o<a;){let e=p(t[o]),r=n;if(o!==s){let n=i[e];r=void 0,r=Array.isArray(n)?[...n]:null!==n&&"[object Object]"===Object.prototype.toString.call(n)?{...n}:g(n)?n:F(t[o+1])?[]:{}}!function(e,t,n){let r=e[t];x.call(e,t)&&(r===n||r!=r&&n!=n)?void 0!==n||t in e||b(e,t,n):(0!==n||1/n==1/r)&&b(e,t,n)}(i,e,r),i=i[e]}return e}(e,t,n)}function V(e,t){let n={};return t.forEach(t=>{let r=M(e,t);n=L(n,t,r)}),n}class A{sort;name="";updated;dependencies=[];isWatch=!1;instance}class E extends A{ctor=e=>(this.name=e,this);preHideValue;updatedItem;updated=()=>{!!this.instance?.getFieldHideValue(this.name)!=!!this.preHideValue&&this.updatedItem?.({})}}var _=n(8121);class P{sort;instance;name="";rules=[];messages;updated;isRequired=()=>!this.instance?.getFieldHideRulesValue?.(this.name)&&!!(this.rules||[]).find(e=>e?.required);ctor=(e,t)=>(this.name=e,this.rules=t||[],this);isValidate=()=>!this.instance?.getFieldHideRulesValue?.(this.name)&&Array.isArray(this.rules)&&this.rules.length;updatedMessages=e=>{this.messages=e||[],this.updated?.({})};updatedRules=e=>{this.rules=e,this.updatedMessages?.([])};validate=(e=!1)=>new Promise((t,n)=>{let r=this.instance?.getFieldValue?.(this.name);this.instance?.getFieldHideRulesValue?.(this.name)&&(this.updatedMessages([]),t({[this.name]:r})),new _.Z({[this.name]:this.rules||[]}).validate({[this.name]:r}).then(n=>{e||this.updatedMessages([]),t(n)}).catch(({errors:t})=>{Array.isArray(t)?(e||this.updatedMessages(t),n(t)):n()})});getValidateResult=()=>{let e=Array.isArray(this.messages)?this.messages.map(e=>e.message):"",t=Array.isArray(e)?!!e.length:!!e;return{tip:e,isInvalid:t}}}class k{formData={};formItemInstances=[];formListInstances=new Map([]);hideItemInstances=[];hideState={};isMountInstance=!1;preserve=!0;hideRuleState={};onValuesChange;onFinish;onFinishFailed;ctor=(e={},t,n)=>(this.formData=e||{},this.hideState=t||{},this.hideRuleState=n||{},this.isMountInstance=!0,this);dispatch_resetFieldValueCount=0;resetFormValues=(e={})=>{if(0===this.dispatch_resetFieldValueCount)return void this.dispatch_resetFieldValueCount++;this.dispatch_resetFieldValueCount++;let t=Object.keys({...e,...this.formData});return this.formData=e||{},this.notice(t,"restValues"),this};resetFieldsValue=(e={})=>{let t=Object.keys({...e});return this.formData=Object.assign(this.formData,e),this.notice(t,"restValues"),this};registerFormList=(e,t)=>(this.formListInstances.set(e,t),()=>{this.formListInstances.delete(e)});registerFormItem=e=>(this.formItemInstances.push(e),()=>{this.formItemInstances=this.formItemInstances.filter(t=>t!==e);let t=this.preserve;!1===e.preserve&&(t=e.preserve);let n=`${e.name}`;n&&D(this.formData,n)&&!t&&(this.formData=L(this.formData,e.name,void 0))});registerFormHideItem=e=>(this.hideItemInstances.push(e),()=>{this.hideItemInstances=this.hideItemInstances.filter(t=>t!==e)});transferChangeValue=e=>{if(this.onValuesChange){let t=this.getFieldValue();if("string"==typeof e){let n=V(t,[e]);this.onValuesChange?.(n,t)}else this.onValuesChange?.(e,t)}return this};updatedFieldHideValue=e=>{let t=Object.keys(e||{});return t.forEach(t=>{this.hideState=L(this.hideState,t,e[t])}),this.noticeHide(t),this};updatedFieldHideRulesValue=e=>{let t=Object.keys(e||{});return t.forEach(t=>{this.hideRuleState=L(this.hideRuleState,t,e[t])}),t.forEach(e=>{let t=this.formItemInstances.find(t=>t.name===e);t&&t?.rule&&t.rule?.updatedMessages?.([])}),this};updatedFieldValue=(e,t,n="validate",r=!1)=>{if(this.formData=L(this.formData,e,t),!0!==r){if(this.transferChangeValue(e),this.notice(e),"validate"===n)this.onlyValidate(e);else if("clear"===n){let t=this.formItemInstances.find(t=>t.name===e);t&&t?.rule&&t.rule?.updatedMessages?.([])}return this}};bathUpdatedFieldValue=(e,t=!0,n=!0,r=!1)=>{let a=Object.keys(e||{});if(a.forEach(t=>{this.formData=L(this.formData,t,e[t])}),!0!==r)return t&&this.transferChangeValue(e),n&&this.onlyValidate(a),this.notice(a),this};getFormListInstance=e=>this.formListInstances.get(e);getFieldValue=e=>e?D(this.formData,e)?M(this.formData,e):void 0:this.formData;getFieldHideRulesValue=e=>e?M(this.hideRuleState,e):this.hideRuleState;getFieldHideValue=e=>e?M(this.hideState,e):this.hideState;notice=(e,t)=>(this._bathNotice(this.formItemInstances,e,!1,t),this);noticeHide=e=>(this._bathNotice(this.hideItemInstances,e),this);noticeWatch=e=>(this._bathNotice(this.formItemInstances,e,!0),this);_bathNotice_judge=(e,t,n)=>{if(t)e.isWatch&&e.updated?.({});else{let t=e?.rule;try{"restValues"===n&&t&&t instanceof P?e?.rule?.updatedMessages?.([]):e.updated?.({})}catch(t){e.updated?.({})}}};_bathNotice=(e,t,n,r)=>("string"==typeof t?e.forEach(e=>{e.name===t?this._bathNotice_judge(e,n,r):Array.isArray(e.dependencies)&&e.dependencies.length&&e.dependencies.find(e=>e===t)&&this._bathNotice_judge(e,n,r)}):Array.isArray(t)?e.forEach(e=>{t.includes(e.name)?this._bathNotice_judge(e,n,r):Array.isArray(e.dependencies)&&e.dependencies.length&&e.dependencies.find(e=>t.includes(e))&&this._bathNotice_judge(e,n,r)}):e.forEach(e=>{this._bathNotice_judge(e,n,r)}),this);onlyValidate=async e=>{try{Array.isArray(e)?await this.validate(e,!1):await this.validate([e],!1)}catch(e){console.log(e)}return this};onlyValidateRulesMessage=e=>new Promise(async(t,n)=>{let r=[],a=[],s=this.formItemInstances.filter(e=>!e.isWatch),o=s.length,i=Array.isArray(e)&&e.length;for(let t=0;t<o;t++){let n=s[t];if(!n.isWatch)if(n.rule&&n.rule.isValidate()){let t=!0;i&&(e.find(e=>e===n.name)||(t=!1));try{t&&(await n.rule.validate(!0),a.push({errors:[],sort:n.sort,name:n.name}))}catch(e){if(e){r.push({errors:e,sort:n.sort,name:n.name});break}}}else a.push({errors:[],sort:n.sort,name:n.name})}r.length?n({errorFields:r}):t({errorFields:[]})});validate=(e,t=!0)=>new Promise(async(n,r)=>{let a=[],s=[],o=this.formItemInstances.filter(e=>!e.isWatch),i=o.map(e=>e.name),l=o.length,m=Array.isArray(e)&&e.length;for(let t=0;t<l;t++){let n=o[t];if(!n.isWatch)if(n.rule&&n.rule.isValidate()){let t=!0;m&&(e.find(e=>e===n.name)||(t=!1));try{t&&(await n.rule.validate(),s.push({errors:[],sort:n.sort,name:n.name}))}catch(e){e&&a.push({errors:e,sort:n.sort,name:n.name})}}else s.push({errors:[],sort:n.sort,name:n.name})}let c=t?V(this.getFieldValue(),i):{};a.length?r({errorFields:a,values:c}):n(c)});submit=async()=>{try{let e=await this.validate();e&&this?.onFinish?.(e)}catch(e){this.onFinishFailed?.(e)}}}class O extends A{parentDataField;noticeOnlyRuleDataField;isNoticeParentField;noticeWatchField;htmlFor;control;rule;preserve=!0;onAfterUpdate;onChange;ctor=(e,t)=>(this.name=e,this.rule=t,this)}class B extends A{rule;formItemInstance;parentDataField;keys=[];id=0;ctor=e=>(this.name=e,this);getLastValue=()=>{let e=this.instance?.getFieldValue?.(this.name);return Array.isArray(e)?e:[]};onAdd=(e={},t)=>{let n=this.getLastValue();if(t){let t=[e||{},...n];this.keys=[this.id,...this.keys],this.id++,this.instance?.updatedFieldValue?.(this.name,t)}else{let t=[...n,e||{}];this.keys=[...this.keys,this.id],this.id++,this.instance?.updatedFieldValue?.(this.name,t)}};onDelete=e=>{let t=this.getLastValue(),n=Array.isArray(e)?e:[e];this.keys=this.keys.filter((e,t)=>!n.includes(t));let r=t.filter((e,t)=>!n.includes(t));this.instance?.updatedFieldValue?.(this.name,r)};onMove=(e,t)=>{let n=this.getLastValue(),r=n[e],a=n[t];n[e]=a,n[t]=r,this.instance?.updatedFieldValue?.(this.name,[...n])};updatedItem=(e,t)=>{let n=this.getLastValue(),r=n[e];n[e]={...r,...t},this.instance?.updatedFieldValue?.(this.name,[...n])};getFields=()=>this.getLastValue().map((e,t)=>{let n=this.keys[t];return void 0===n&&(this.keys[t]=this.id,n=this.keys[t],this.id++),{name:t,key:n}})}class H{instanceMap=new Map([]);ctor=(e,t)=>(this.instanceMap.set(e,t),()=>{this.instanceMap.delete(e)});getInstance=e=>e?this.instanceMap.get(e):this.instanceMap;validate=e=>new Promise(async(t,n)=>{let r={},a=!0,s=[],o=!1;e?Array.isArray(e)?s=e:"[object Object]"===Object.prototype.toString.call(e)?(o=!0,s=Object.keys(e)):s=[e]:s=Array.from(this.instanceMap.keys());let i=s.length;for(let t=0;t<i;t++){let n=s[t],i=this.instanceMap.get(n);try{if(i){let t=o?e[n]:void 0,a=await i.validate(t);r[n]={errorFields:[],values:a}}}catch(e){a=!1,r[n]=e}}a?t(r):n(r)});getFormFieldValue=(e,t)=>{if(!e){let e={};return this.instanceMap.forEach((t,n)=>{e[n]=t.getFieldValue()}),e}let n=this.instanceMap.get(e);if(n){if("string"==typeof t)return{[e]:n.getFieldValue(t)};if(t)return{[e]:V(n.getFieldValue(),t)}}return{[e]:{}}}}let $=(0,a.createContext)({name:"",sort:""}),W=e=>{let{name:t,sort:n,children:r}=e,s=(0,a.useMemo)(()=>({name:t,sort:n}),[t,n]);return(0,a.createElement)($.Provider,{value:s,children:r})},z=e=>{let{isJoinParentField:t=!0,sort:n,name:r}=e,s=(0,a.useContext)($),o=s.name,i=s.sort;return{newName:(0,a.useMemo)(()=>{if(o&&t){if(/^\./.test(`${r}`));else if(r)return[o,".",r].filter(Boolean).join("");return[o,r].filter(Boolean).join("")}return[r].filter(Boolean).join("")},[t,r,o]),newSort:(0,a.useMemo)(()=>[t?i:"",n].filter(Boolean).join("-"),[t,i,n]),parentItem:s,parentName:o}},T=(0,a.createContext)(new k);function q(){return(0,a.useContext)(T)}function Z(e){let t=(0,a.useRef)();return t.current||(e?t.current=e:t.current=new k),t.current}let U=e=>{let{name:t,sort:n,isJoinParentField:r=!0}=e,s=q(),[,o]=(0,a.useState)({}),{newName:i,newSort:l}=z({name:t,sort:n,isJoinParentField:r}),m=(0,a.useRef)(new E().ctor(i)).current,c=s.getFieldHideValue(i);return m.preHideValue=c,m.instance=s,m.updatedItem=o,m.sort=l,(0,a.useEffect)(()=>{let e=s.registerFormHideItem(m);return()=>e()},[i]),{form:s,isHide:c}};(0,a.createContext)(new O);let J=e=>{let t=(0,a.useRef)();return t.current||(e?t.current=e:t.current=new O),t.current},X=e=>{let{name:t,rules:n,sort:r,isJoinParentField:s=!0}=e,o=q(),{newName:i,newSort:l,parentName:m}=z({name:t,sort:r,isJoinParentField:s}),[,c]=(0,a.useState)({}),d=(0,a.useRef)(new P).current;(0,a.useMemo)(()=>d.ctor(i,n),[n,i]),d.instance=o,d.sort=l;let u=J();return(0,a.useMemo)(()=>u.ctor(i,d),[]),u.instance=o,u.sort=l,u.parentDataField=m,u.updated=c,d.updated=c,(0,a.useEffect)(()=>{let e=o.registerFormItem(u);return()=>e()},[]),{ruleInstance:d,formItemInstance:u,form:o,parentName:m,newName:i}},G=(0,a.createContext)(new B),K=e=>{let t=(0,a.useRef)();return t.current||(e?t.current=e:t.current=new B),t.current},Q=e=>{let{...t}=e,{ruleInstance:n,formItemInstance:r,form:s,newName:o,parentName:i}=X({...t}),l=K();return(0,a.useMemo)(()=>l.ctor(o),[o]),l.instance=s,l.rule=n,l.sort=e.sort,l.formItemInstance=r,l.parentDataField=i,(0,a.useEffect)(()=>{let e=s.registerFormList(o,l);return()=>e()},[o,l]),{ruleInstance:n,formItemInstance:r,formListInstance:l}},Y=(0,a.createContext)(new H),ee=()=>(0,a.useContext)(Y),et=(e,t)=>{let n=ee();return(0,a.useEffect)(()=>{let r;return t&&(r=n.ctor(t,e)),()=>{r?.()}},[t,e]),n},en=(0,a.createContext)({colCount:4,errorLayout:"left-bottom",labelMode:"top",showColon:!0,inputBordered:!0}),er=()=>(0,a.useContext)(en),ea=0,es=e=>{let t=(0,a.useRef)(ea++);return(0,a.useMemo)(()=>`carefree-form-item_${t.current.toString(32)}_${e}`,[t.current,e])};class eo{name;form;oldValue;dispatch;callBack;updated=()=>{let e=this.form.getFieldValue(this.name);this.oldValue!==e&&(this.callBack?this.callBack(e,this.form):this.dispatch(e))}}let ei=(e,t,n)=>{let r=t||q(),[s,o]=(0,a.useState)(r.getFieldValue(e)),i=(0,a.useRef)(new eo).current;i.name=e,i.oldValue=s,i.dispatch=o,i.callBack=n,i.form=r;let l=J();return(0,a.useMemo)(()=>l.ctor(e),[]),l.instance=r,l.isWatch=!0,l.updated=i.updated,(0,a.useEffect)(()=>{let e=r.registerFormItem(l);return()=>e()},[]),[s,r,i]};class el{dom=(0,a.createRef)();onUpdatedResize;isListener=!0;_temp_size={width:-1,height:-1,offsetWidth:-1,offsetHeight:-1};onSize=()=>{let{width:e,height:t}=this.dom.current.getBoundingClientRect(),{offsetWidth:n,offsetHeight:r}=this.dom.current,a=Math.floor(e),s=Math.floor(t);if(this._temp_size.width!==a||this._temp_size.height!==s||this._temp_size.offsetWidth!==n||this._temp_size.offsetHeight!==r){let o={width:a,height:s,offsetWidth:n,offsetHeight:r};this._temp_size=o;let i=n===Math.round(e)?e:n,l=r===Math.round(t)?t:r,m={...o,offsetWidth:i,offsetHeight:l};this.onUpdatedResize&&Promise.resolve().then(()=>{this.onUpdatedResize(m,this.dom.current)})}};ensureObserver=()=>{let e=new ResizeObserver(this.onSize);return this.dom.current&&this.isListener&&e.observe(this.dom.current),()=>{e.disconnect()}}}let em=(e={})=>{let{isListener:t=!0,onResize:n}=e,r=(0,a.useRef)(new el).current;return r.onUpdatedResize=n,r.isListener=t,(0,a.useEffect)(()=>r.ensureObserver(),[r.dom,t]),r},ec=a.memo(e=>{let{colCount:t=4,children:n,className:s,style:i={},gap:l,onResize:m,onGapRow:c}=e,d=(0,a.useRef)(e);d.current=e;let u=(0,a.useRef)(t);u.current=t;let h=(0,a.useMemo)(()=>o()("carefrees-form-layout-body",s),[s]),f=(0,a.useRef)({row:void 0,col:void 0}),p=(0,a.useRef)(0),g=em({onResize:(0,a.useCallback)(e=>{"function"==typeof d.current.onResize&&d.current.onResize(e,g.dom.current),"function"==typeof d.current.onGapRow&&p.current!==e.height&&y()},[]),isListener:"function"==typeof m||"function"==typeof c}),y=(0,a.useCallback)(()=>{if("function"==typeof d.current.onGapRow&&g.dom.current)try{let e=[...g.dom.current.children],t=new Set;for(let n of e)if(n){let e=n?.offsetTop;t.add(e)}let n=t.size;if(f.current.row===n&&f.current.col===u.current)return;f.current={row:n,col:u.current},d.current.onGapRow(n,u.current,g.dom.current)}catch(e){console.log("计算行数失败",e)}},[]);(0,a.useEffect)(()=>{y()},[t,g.dom]);let F=(0,a.useMemo)(()=>{let e={};return t&&(e.gridColumnEnd=`repeat(${t}, auto)`),"number"==typeof l?e.gap=`${l}px`:l&&(e.gap=l),e},[t,l]);return(0,r.jsx)("div",{ref:g.dom,style:{...F,...i},className:h,children:n})}),ed="carefrees-form-layout",eu=a.memo(e=>{let{colCount:t=4,errorLayout:n="left-bottom",labelMode:s="left",showColon:i=!0,formItemClassName:l,formItemStyle:m,formItemLabelClassName:c,formItemLabelStyle:d}=er(),{colCount:u=t,title:h,extra:f,children:p,isAllColSpan:g,className:y,headerClassName:F,bodyClassName:b,style:x,headerStyle:I,bodyStyle:j,errorLayout:R=n,labelMode:v=s,showColon:w=i,formItemClassName:S=l,formItemStyle:N=m,formItemLabelClassName:C=c,formItemLabelStyle:D=d,bordered:M=!1,gap:L,onResize:V,onGapRow:A}=e;(0,a.useRef)(e).current=e;let E=(0,a.useMemo)(()=>o()(`${ed}-body`,b),[b]),_=(0,a.useMemo)(()=>o()(`${ed}-header`,F),[F]),P=(0,a.useMemo)(()=>o()(`${ed}-header-title`),[]),k=(0,a.useMemo)(()=>o()(`${ed}-header-extra`),[]),O=(0,a.useMemo)(()=>o()(ed,y,{"all-colspan":g,bordered:M}),[y]),B=(0,a.useMemo)(()=>({colCount:u,errorLayout:R,labelMode:v,showColon:w,formItemClassName:S,formItemStyle:N,formItemLabelClassName:C,formItemLabelStyle:D}),[u,R,v,w,S,N,C,D]);return(0,r.jsx)(en.Provider,{value:B,children:(0,r.jsxs)("div",{style:x,className:O,children:[h||f?(0,r.jsxs)("div",{style:I,className:_,children:[(0,r.jsx)("div",{className:P,children:h}),(0,r.jsx)("div",{className:k,children:f})]}):(0,r.jsx)(a.Fragment,{}),(0,r.jsx)(ec,{onResize:V,onGapRow:A,gap:L,style:j,className:E,colCount:u,children:p})]})})}),eh=a.forwardRef((e,t)=>{let n=(0,a.useMemo)(()=>o()(ed,e.className,{"all-colspan":!0}),[e.className]);return(0,r.jsx)("div",{...e,ref:t,className:n})}),ef="carefrees-form-item",ep=a.memo(e=>{let{formItemClassName:t,formItemLabelClassName:n,formItemLabelStyle:s,formItemStyle:i,labelMode:l="top",errorLayout:m="left-bottom",showColon:c=!0,colCount:d=4,inputBordered:u=!1}=er(),{children:h,labelMode:f=l,onlyRuleStyle:p,label:g,helpText:y,extra:F,showColon:b=c,colSpan:x=1,rowSpan:I=1,validateResult:j,htmlFor:R,required:v,errorLayout:w=m,style:S,className:N,labelClassName:C,labelStyle:D,inputBordered:M=u}=e,L=j?.tip,V=!!j?.isInvalid,A=(0,a.useMemo)(()=>o()(ef,N,t,{"dx-invalid":V}),[V]),E=(0,a.useMemo)(()=>o()(`${ef}-label-warp`,C,n),[C,n]),_=(0,a.useMemo)(()=>o()(`${ef}-body-error`,{[w]:!!w}),[w]),P=(0,a.useMemo)(()=>g&&"hide"!==f,[g,f]),k=(0,a.useMemo)(()=>o()(`${ef}-label`,{required:v,"show-colon":b&&("left"===f||"between"===f)}),[f,v,b]),O=(0,a.useMemo)(()=>o()(`${ef}-container`,{[`${f}`]:!!f}),[f]),B=(0,a.useMemo)(()=>o()(`${ef}-body-input`,{"input-bordered":M}),[M]),H=(0,a.useMemo)(()=>{let e={};if(p&&(e.padding="0px"),x){let t=d>x?x:d;e.gridColumnEnd=`span ${t}`}return I&&(e.gridRowEnd=`span ${I}`),e},[p,x,I,d]);return(0,r.jsxs)("div",{style:{...i,...H,...S},className:A,children:[(0,r.jsxs)("div",{className:O,children:[P?(0,r.jsx)("div",{style:{...s,...D},className:E,children:(0,r.jsx)("label",{htmlFor:R,className:k,children:g})}):(0,r.jsx)(a.Fragment,{}),(0,r.jsxs)("div",{className:`${ef}-body`,children:[(0,r.jsx)("div",{className:B,children:h}),y?(0,r.jsx)("div",{className:`${ef}-body-help`,children:y}):(0,r.jsx)(a.Fragment,{}),V?(0,r.jsx)("div",{className:_,children:L}):(0,r.jsx)(a.Fragment,{})]})]}),F?(0,r.jsx)("div",{className:`${ef}-extra`,children:F}):(0,r.jsx)(a.Fragment,{})]})}),eg=e=>{let{trigger:t="onChange",dependencies:n,noticeOnlyRuleDataField:r,isNoticeParentField:s,noticeWatchField:o,preserve:i,valuePropName:l="value",getValuePath:m=l,getValueFromEvent:c,formatValue:d,onAfterUpdate:u,useAttrs:h,useRules:f,attrs:p,children:g,...y}=e,{formItemInstance:F,form:b,ruleInstance:x,newName:I}=X({...y});F.dependencies=n,F.noticeOnlyRuleDataField=r,F.isNoticeParentField=s,F.onAfterUpdate=u,F.noticeWatchField=o,F.preserve=i;let j=b.getFieldValue(I),R=e=>{try{let t=e;"function"==typeof c?t=c(e,b,F):e&&e.target&&"object"==typeof e.target&&m in e.target&&(t=M(e.target,m)),"function"==typeof d&&(t=d(t,b,F,e)),j!==t&&(b.updatedFieldValue(I,t,"validate"),F.onAfterUpdate?.(t,b,F,e),Array.isArray(F.noticeWatchField)&&F.noticeWatchField.length&&b.noticeWatch(F.noticeWatchField),Array.isArray(F.noticeOnlyRuleDataField)&&F.noticeOnlyRuleDataField.length&&b.onlyValidate(F.noticeOnlyRuleDataField),F.isNoticeParentField&&F.parentDataField&&b.notice(F.parentDataField))}catch(e){console.log(e)}};F.onChange=R;let v=es(I);F.htmlFor=v;let w={[t]:R,...p,name:I,id:v,[l]:j},S=h?.(w,b,F)||w;F.control=S,f?.(x,b,F);let N=(0,a.useMemo)(()=>x.getValidateResult(),[x.messages]);return{children:(0,a.isValidElement)(g)?(0,a.cloneElement)(g,S):g,form:b,formItemInstance:F,ruleInstance:x,onChange:R,htmlFor:v,validateResult:N}},ey=a.memo(e=>{let{labelMode:t,noStyle:n,onlyRuleStyle:a,label:s,helpText:o,extra:i,errorLayout:l,required:m,showColon:c,colSpan:d,rowSpan:u,...h}=e,{children:f,ruleInstance:p,formItemInstance:g,htmlFor:y,validateResult:F}=eg({...h});return n?(0,r.jsx)(W,{name:g.name,sort:g.sort,children:f}):(0,r.jsx)(W,{name:g.name,sort:g.sort,children:(0,r.jsx)(ep,{labelMode:t,onlyRuleStyle:a,required:m||p?.isRequired?.(),label:s,helpText:o,extra:i,errorLayout:l,showColon:c,colSpan:d,rowSpan:u,htmlFor:y,validateResult:F,children:f})})}),eF=a.memo(e=>{let{name:t}=e;if(t)return(0,r.jsx)(ey,{...e,name:t});let{labelMode:n,onlyRuleStyle:a,label:s,helpText:o,extra:i,errorLayout:l,required:m,showColon:c,colSpan:d,rowSpan:u,children:h}=e;return(0,r.jsx)(ep,{labelMode:n,onlyRuleStyle:a,required:m,label:s,helpText:o,extra:i,errorLayout:l,showColon:c,colSpan:d,rowSpan:u,children:h})}),eb=a.memo(e=>{let{name:t,sort:n,isJoinParentField:s}=e,{isHide:o}=U({name:t,sort:n,isJoinParentField:s});return o?(0,r.jsx)(a.Fragment,{}):(0,r.jsx)(ey,{...e})}),ex=a.memo(e=>{let{children:t,...n}=e,{formListInstance:a,ruleInstance:s,formItemInstance:o}=Q(n);return(0,r.jsx)(G.Provider,{value:a,children:(0,r.jsx)(W,{name:a.name,sort:a.sort,children:t({fields:a.getFields(),onAdd:a.onAdd,onDelete:a.onDelete,onMove:a.onMove},{ruleInstance:s,formItemInstance:o,formListInstance:a})})})});function eI(e){let{children:t,form:n,style:s={},className:i,formData:l,hideData:m,hideRuleData:c,isAutoUpdatedFormData:d=!1,name:u,onFinish:h,onFinishFailed:f,onValuesChange:p,layoutStyle:g,layoutClassName:y,bgcolor:F,...b}=e,x=Z(n);et(x,u);let I=(0,a.useMemo)(()=>o()("carefrees-form",i),[]);(0,a.useMemo)(()=>x.ctor(l,m,c),[]),x.onFinish=h,x.onValuesChange=p,x.onFinishFailed=f,(0,a.useEffect)(()=>{d&&x.resetFormValues(l)},[d,l]);let j=(0,a.useMemo)(()=>F?{backgroundColor:F}:{},[F]);return(0,r.jsx)(T.Provider,{value:x,children:(0,r.jsx)("form",{className:I,style:{...j,...s},onSubmit:e=>{e?.preventDefault?.(),e?.stopPropagation?.(),x.submit()},children:(0,r.jsx)(eu,{...b,className:y,style:g,children:t})})})}},1790:function(e,t,n){"use strict";n.r(t),n.d(t,{default:()=>f});var r=n(4246),a=n(980),s=n(199),o=n(315),i=n(2446),l=n(2316),m=n(9806),c=n(6250),d=n(5889);function u(e){let t=Object.assign({h1:"h1",a:"a",h2:"h2",pre:"pre",code:"code",h3:"h3"},(0,a.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.h1,{id:"pc--h5",children:[(0,r.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#pc--h5",children:"#"}),"pc & h5"]}),"\n",(0,r.jsxs)(t.h2,{id:"安装",children:[(0,r.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#安装",children:"#"}),"安装"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"npm install @carefrees/form-utils-react # yarn add @carefrees/form-utils-react # pnpm add @carefrees/form-utils-react\n"})}),"\n",(0,r.jsxs)(t.h2,{id:"加载样式",children:[(0,r.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#加载样式",children:"#"}),"加载样式"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-tsx",children:"import '@carefrees/form-utils-react/assets/index.css';\n"})}),"\n",(0,r.jsxs)(t.h2,{id:"使用",children:[(0,r.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#使用",children:"#"}),"使用"]}),"\n",(0,r.jsxs)(t.h3,{id:"基本使用",children:[(0,r.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#基本使用",children:"#"}),"基本使用"]}),"\n",(0,r.jsxs)(d.Z,{isMobile:"false",demoId:"_react_react_1",children:[(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-tsx",meta:"preview",children:'import { Form, FormItem, useForm } from \'@carefrees/form-utils-react\';\nimport React, { useState } from \'react\';\n\nconst Demo = () => {\n  const [formData] = useState({ name: \'\', age: 18 });\n  const form = useForm();\n\n  const onSubmit = async () => {\n    try {\n      console.log(form);\n      const result = await form.validate();\n      console.log(result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return (\n    <Form formData={formData} form={form}>\n      <FormItem rules={[{ required: true, message: \'必填\' }]} name="name" label="name">\n        <input style={{ width: \'100%\' }} placeholder="请输入" />\n      </FormItem>\n      <FormItem name="age" label="age">\n        <input style={{ width: \'100%\' }} placeholder="请输入" />\n      </FormItem>\n      <FormItem name="address" label="address">\n        <input style={{ width: \'100%\' }} placeholder="请输入" />\n      </FormItem>\n      <div style={{ display: \'flex\', alignItems: \'flex-end\', padding: 8 }}>\n        <button type="button" onClick={onSubmit}>\n          验\uD83D\uDE01\uD83D\uDE1D证\n        </button>\n      </div>\n    </Form>\n  );\n};\n\nexport default Demo;\n'})}),(0,r.jsx)(s.Z,{})]}),"\n",(0,r.jsxs)(t.h3,{id:"控制隐藏",children:[(0,r.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#控制隐藏",children:"#"}),"控制隐藏"]}),"\n",(0,r.jsxs)(d.Z,{isMobile:"false",demoId:"_react_react_2",children:[(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-tsx",meta:"preview",children:"import { Form, FormItem, FormHideItem, useForm } from '@carefrees/form-utils-react';\nimport React, { useState } from 'react';\n\nconst Demo = () => {\n  const [formData] = useState({ name: '张三', age: '' });\n  const form = useForm();\n\n  const onSubmit = async () => {\n    try {\n      console.log(form);\n      const result = await form.validate();\n      console.log(result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const onValuesChange = (item: any) => {\n    console.log('item', item);\n    if (Reflect.has(item, 'age')) {\n      if (item.age === '18') {\n        form.updatedFieldHideValue({ address: false });\n      } else {\n        form.updatedFieldHideValue({ address: true });\n      }\n    }\n  };\n\n  return (\n    <Form formData={formData} form={form} onValuesChange={onValuesChange} hideData={{ address: true }}>\n      <FormItem rules={[{ required: true, message: '必填' }]} name=\"name\" label=\"name\">\n        <input style={{ width: '100%' }} placeholder=\"请输入\" />\n      </FormItem>\n      <FormItem name=\"age\" label=\"age\">\n        <input style={{ width: '100%' }} placeholder=\"请输入18,显示address表单项\" />\n      </FormItem>\n      <FormHideItem name=\"address\" label=\"address\">\n        <input style={{ width: '100%' }} placeholder=\"请输入\" />\n      </FormHideItem>\n      <div style={{ display: 'flex', alignItems: 'flex-end', padding: 8 }}>\n        <button type=\"button\" onClick={onSubmit}>\n          验\uD83D\uDE01\uD83D\uDE1D证\n        </button>\n      </div>\n    </Form>\n  );\n};\nexport default Demo;\n"})}),(0,r.jsx)(o.Z,{})]}),"\n",(0,r.jsxs)(t.h3,{id:"表单字段监听",children:[(0,r.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#表单字段监听",children:"#"}),"表单字段监听"]}),"\n",(0,r.jsxs)(d.Z,{isMobile:"false",demoId:"_react_react_3",children:[(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-tsx",meta:"preview",children:"import { Form, FormItem, useWatch, useForm, FormLayoutRows } from '@carefrees/form-utils-react';\nimport React, { useState } from 'react';\n\n// 子节点\nconst Child = () => {\n  // 第一次监听可以获取到值\n  const [value] = useWatch('name');\n  return <div>表单内部监听name值：{value}</div>;\n};\n\nconst Demo = () => {\n  const [formData] = useState({ name: '张三', age: 18 });\n  const form = useForm();\n\n  // 在表单包裹内,第一次监听获取不到值\n  const [age] = useWatch('age', form);\n  // console.log(age);\n\n  const onSubmit = async () => {\n    try {\n      console.log(form);\n      const result = await form.validate();\n      console.log(result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <Form formData={formData} form={form}>\n      <FormItem rules={[{ required: true, message: '必填' }]} name=\"name\" label=\"name\">\n        <input style={{ width: '100%' }} placeholder=\"请输入\" />\n      </FormItem>\n      <FormItem name=\"age\" label=\"age\">\n        <input style={{ width: '100%' }} placeholder=\"请输入\" />\n      </FormItem>\n      <FormLayoutRows>\n        <Child />\n        <div style={{ display: 'flex', alignItems: 'flex-end', padding: 8 }}>\n          <button type=\"button\" onClick={onSubmit}>\n            表单外部监听age字段值:{age}\n          </button>\n        </div>\n      </FormLayoutRows>\n    </Form>\n  );\n};\nexport default Demo;\n"})}),(0,r.jsx)(i.Z,{})]}),"\n",(0,r.jsxs)(t.h3,{id:"list-表单项",children:[(0,r.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#list-表单项",children:"#"}),"list 表单项"]}),"\n",(0,r.jsxs)(d.Z,{isMobile:"false",demoId:"_react_react_4",children:[(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-tsx",meta:"preview",children:"import { Form, FormItem, useWatch, useForm, FormList, FormLayoutRows, FormLayout } from '@carefrees/form-utils-react';\nimport React, { useState } from 'react';\n\n// 子节点\nconst Child = () => {\n  // 第一次监听可以获取到值\n  const [value] = useWatch('list');\n  return <div>list值：{JSON.stringify(value)}</div>;\n};\n\nconst Demo = () => {\n  const [formData] = useState({\n    name: '张三',\n    age: 18,\n    list: [{ name: '张三' }, { name: '李四' }],\n  });\n  const form = useForm();\n\n  const onSubmit = async () => {\n    try {\n      console.log(form);\n      const result = await form.validate();\n      console.log(result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <Form formData={formData} form={form}>\n      <FormItem rules={[{ required: true, message: '必填' }]} name=\"name\" label=\"name\">\n        <input style={{ width: '100%' }} placeholder=\"请输入\" />\n      </FormItem>\n      <FormItem name=\"age\" label=\"age\">\n        <input style={{ width: '100%' }} placeholder=\"请输入\" />\n      </FormItem>\n      <FormLayoutRows>\n        <FormList name=\"list\">\n          {(options) => {\n            const fields = options.fields;\n            return (\n              <div>\n                <button type=\"button\" onClick={() => options.onAdd({})}>\n                  添加一项数据\n                </button>\n                {fields.map((item, index) => {\n                  return (\n                    <FormLayout key={item.key}>\n                      <FormItem name={`[${item.name}].name`} label=\"子项name\">\n                        <input style={{ width: '100%' }} placeholder=\"请输入\" />\n                      </FormItem>\n                      <div\n                        style={{\n                          display: 'flex',\n                          alignItems: 'flex-end',\n                          padding: 8,\n                        }}\n                      >\n                        <button type=\"button\" onClick={() => options.onDelete(index)}>\n                          删除数据\n                        </button>\n                      </div>\n                    </FormLayout>\n                  );\n                })}\n              </div>\n            );\n          }}\n        </FormList>\n      </FormLayoutRows>\n      <FormLayoutRows>\n        <Child />\n        <div style={{ display: 'flex', alignItems: 'flex-end', padding: 8 }}>\n          <button type=\"button\" onClick={onSubmit}>\n            提交\n          </button>\n        </div>\n      </FormLayoutRows>\n    </Form>\n  );\n};\nexport default Demo;\n"})}),(0,r.jsx)(l.Z,{})]}),"\n",(0,r.jsxs)(t.h3,{id:"表单项依赖更新dependencies-参数",children:[(0,r.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#表单项依赖更新dependencies-参数",children:"#"}),"表单项依赖更新(dependencies 参数)"]}),"\n",(0,r.jsxs)(d.Z,{isMobile:"false",demoId:"_react_react_5",children:[(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-tsx",meta:"preview",children:'import { Form, FormItem, useWatch, useForm, FormLayoutRows, useFormInstance } from \'@carefrees/form-utils-react\';\nimport React, { useState, useMemo } from \'react\';\n\n// 子节点\nconst ChildInput = () => {\n  const form = useFormInstance();\n  const a = form.getFieldValue(\'a\');\n  const b = form.getFieldValue(\'b\');\n  const value = useMemo(() => {\n    if (a && b) {\n      return a * b;\n    }\n    return 0;\n  }, [a, b]);\n  // 第一次监听可以获取到值\n  return <input placeholder="请输入a和b" disabled value={value} />;\n};\n\nconst Demo = () => {\n  const [formData] = useState({ a: 0, b: 0 });\n  const form = useForm();\n\n  const onSubmit = async () => {\n    try {\n      console.log(form);\n      const result = await form.validate();\n      console.log(result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <Form formData={formData} form={form}>\n      <FormItem name="a" label="a">\n        <input type="number" style={{ width: \'100%\' }} placeholder="请输入" />\n      </FormItem>\n      <FormItem name="b" label="b">\n        <input type="number" style={{ width: \'100%\' }} placeholder="请输入" />\n      </FormItem>\n      <FormItem dependencies={[\'a\', \'b\']} name="c" label="请输入a和b">\n        <ChildInput />\n      </FormItem>\n      <FormLayoutRows>\n        <div style={{ display: \'flex\', alignItems: \'flex-end\', padding: 8 }}>\n          <button type="button" onClick={onSubmit}>\n            提交\n          </button>\n        </div>\n      </FormLayoutRows>\n    </Form>\n  );\n};\nexport default Demo;\n'})}),(0,r.jsx)(m.Z,{})]}),"\n",(0,r.jsxs)(t.h3,{id:"布局组件",children:[(0,r.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#布局组件",children:"#"}),"布局组件"]}),"\n",(0,r.jsxs)(d.Z,{isMobile:"false",demoId:"_react_react_6",children:[(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-tsx",meta:"preview",children:'import {\n  Form,\n  FormItem,\n  useWatch,\n  useForm,\n  FormLayoutRows,\n  useFormInstance,\n  FormLayout,\n} from \'@carefrees/form-utils-react\';\nimport React, { useState, useMemo } from \'react\';\n\nconst Demo = () => {\n  const [formData] = useState({\n    a: \'\',\n    b: \'\',\n    c: \'\',\n    d: \'\',\n    e: \'\',\n    f: \'\',\n    g: \'\',\n    h: \'\',\n    j: \'\',\n    k: \'\',\n    l: \'\',\n    m: \'\',\n    address: \'\',\n  });\n  const form = useForm();\n  const [state, setState] = useState<{ row?: number; col?: number }>({ row: undefined, col: undefined });\n\n  const onSubmit = async () => {\n    try {\n      console.log(form);\n      const result = await form.validate();\n      console.log(result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <Form gap={14} colCount={4} formData={formData} form={form}>\n      <FormLayout formItemLabelStyle={{ width: 60 }} isAllColSpan labelMode="left" bordered title="标题1">\n        <FormItem rules={[{ required: true, message: \'必填\' }]} name="a" label="测试1">\n          <input style={{ width: \'100%\' }} placeholder="请输入18,显示address表单项" />\n        </FormItem>\n        <FormItem name="address" label="address">\n          <input style={{ width: \'100%\' }} placeholder="请输入" />\n        </FormItem>\n      </FormLayout>\n      <FormLayout\n        onGapRow={(row, col) => {\n          console.log(row, col);\n          setState({ row, col });\n        }}\n        isAllColSpan\n        labelMode="top"\n        bordered\n        title="标题2"\n      >\n        <FormItem colSpan={2} rules={[{ required: true, message: \'必填\' }]} name="a" label="测试1">\n          <input style={{ width: \'100%\' }} placeholder="请输入" />\n        </FormItem>\n        <FormItem rowSpan={2} rules={[{ required: true, message: \'必填\' }]} name="b" label="测试2">\n          <textarea style={{ width: \'100%\', height: \'100%\' }} placeholder="请输入" />\n        </FormItem>\n        <FormItem name="c" label="测试3">\n          <input style={{ width: \'100%\' }} placeholder="请输入" />\n        </FormItem>\n        <FormItem name="d" label="测试4">\n          <input style={{ width: \'100%\' }} placeholder="请输入" />\n        </FormItem>\n        <FormItem name="e" label="测试5">\n          <input style={{ width: \'100%\' }} placeholder="请输入" />\n        </FormItem>\n        <FormItem name="f" label="测试6">\n          <input style={{ width: \'100%\' }} placeholder="请输入" />\n        </FormItem>\n        <FormItem name="g" label="测试7">\n          <input style={{ width: \'100%\' }} placeholder="请输入" />\n        </FormItem>\n        <FormItem name="h" label="测试8">\n          <input style={{ width: \'100%\' }} placeholder="请输入" />\n        </FormItem>\n        <FormItem name="j" label="测试9">\n          <input style={{ width: \'100%\' }} placeholder="请输入" />\n        </FormItem>\n        <FormItem name="k" label="测试10">\n          <input style={{ width: \'100%\' }} placeholder="请输入" />\n        </FormItem>\n        <div style={{ gridColumn: state.col, gridRow: state.row, padding: 8 }}>\n          <button type="button" onClick={onSubmit}>\n            验\uD83D\uDE01\uD83D\uDE1D证\n          </button>\n        </div>\n      </FormLayout>\n      <FormLayout isAllColSpan labelMode="top" title="标题2">\n        <FormItem rules={[{ required: true, message: \'必填\' }]} name="a" label="测试1">\n          <input style={{ width: \'100%\' }} placeholder="请输入" />\n        </FormItem>\n        <FormItem name="address" label="address">\n          <input style={{ width: \'100%\' }} placeholder="请输入" />\n        </FormItem>\n      </FormLayout>\n    </Form>\n  );\n};\nexport default Demo;\n'})}),(0,r.jsx)(c.Z,{})]}),"\n",(0,r.jsxs)(t.h2,{id:"类型",children:[(0,r.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#类型",children:"#"}),"类型"]}),"\n",(0,r.jsxs)(t.h3,{id:"form-表单",children:[(0,r.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#form-表单",children:"#"}),"Form 表单"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"import React from 'react';\nimport { FormInstanceBase, ValidateErrorEntity } from '@carefrees/form-utils';\nimport { FormLayoutProps } from '@carefrees/form-utils-react/esm/layout';\n\nexport interface FormProps<T = any> extends FormLayoutProps {\n  children?: React.ReactNode;\n  form?: FormInstanceBase;\n  style?: React.CSSProperties;\n  className?: string;\n  layoutClassName?: string;\n  layoutStyle?: React.CSSProperties;\n  /**表单数据*/\n  formData?: any;\n  /**值更新触发*/\n  onValuesChange?: (changedValues: Partial<T>, values: T) => void;\n  /**提交保存 验证成功*/\n  onFinish?: (values: T) => void;\n  /**提交保存 验证失败*/\n  onFinishFailed?: (errorInfo: ValidateErrorEntity<T>) => void;\n  /**隐藏表单项初始值*/\n  hideData?: Record<string, boolean>;\n  /**表单名称*/\n  name?: string;\n  /**隐藏规则校验*/\n  hideRuleData?: Record<string, boolean>;\n  /**自动重置更新formData数据*/\n  isAutoUpdatedFormData?: boolean;\n  /**背景颜色*/\n  bgcolor?: string;\n}\nexport declare function Form<T = any>(props: FormProps<T>): import('react/jsx-runtime').JSX.Element;\n"})}),"\n",(0,r.jsxs)(t.h3,{id:"formitem-表单项",children:[(0,r.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#formitem-表单项",children:"#"}),"FormItem 表单项"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"import { LayoutFormItemProps } from '@carefrees/form-utils-react/esm/layout/layout.formItem';\nimport { FormItemAttrOptions } from '@carefrees/form-utils-react/esm/hooks/attr/attr.FormItem';\nimport React from 'react';\nexport interface FormItemProps extends FormItemAttrOptions, LayoutFormItemProps {\n  /**不进行样式渲染*/\n  noStyle?: boolean;\n}\n/**表单项*/\nexport declare const FormItem: React.MemoExoticComponent<\n  (props: Partial<FormItemProps>) => import('react/jsx-runtime').JSX.Element\n>;\n/**隐藏表单项*/\nexport declare const FormHideItem: React.MemoExoticComponent<\n  (props: FormItemProps) => import('react/jsx-runtime').JSX.Element\n>;\n"})}),"\n",(0,r.jsxs)(t.h3,{id:"formlist-表单-list",children:[(0,r.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#formlist-表单-list",children:"#"}),"FormList 表单 List"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"import { RuleInstanceBase, FormItemInstanceBase, FormListInstanceBase } from '@carefrees/form-utils';\nimport React from 'react';\nimport { RegisterFormListOptions } from '@carefrees/form-utils-react-hooks';\nexport interface FormListChildrenProps {\n  /**数据集合*/\n  fields: {\n    name: number;\n    key: number;\n  }[];\n  /**添加*/\n  onAdd: (initialValue?: Object) => void;\n  /**删除*/\n  onDelete: (index: number | number[]) => void;\n  /**移动*/\n  onMove: (from: number, to: number) => void;\n}\nexport interface FormListProps extends RegisterFormListOptions {\n  children: (\n    options: FormListChildrenProps,\n    instances: {\n      ruleInstance: RuleInstanceBase;\n      formItemInstance: FormItemInstanceBase;\n      formListInstance: FormListInstanceBase;\n    },\n  ) => React.ReactNode;\n}\n/**form list 组件*/\nexport declare const FormList: React.MemoExoticComponent<\n  (props: FormListProps) => import('react/jsx-runtime').JSX.Element\n>;\n/**隐藏 form list item 组件*/\nexport declare const FormHideList: React.MemoExoticComponent<\n  (props: FormListProps) => import('react/jsx-runtime').JSX.Element\n>;\n"})}),"\n",(0,r.jsxs)(t.h3,{id:"布局组件-类型",children:[(0,r.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#布局组件-类型",children:"#"}),"布局组件 类型"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"import React from 'react';\nimport { AttrsOptions } from '@carefrees/form-utils-react-hooks';\nimport { FormLayoutBodyProps } from '@carefrees/form-utils-react/esm/layout/layout.body';\nexport interface FormLayoutProps extends AttrsOptions, FormLayoutBodyProps {\n  /**标题*/\n  title?: React.ReactNode;\n  /**额外内容*/\n  extra?: React.ReactNode;\n  /**内容*/\n  children?: React.ReactNode;\n  /**是否占据整行*/\n  isAllColSpan?: boolean;\n  className?: string;\n  /**头部ClassName*/\n  headerClassName?: string;\n  /**内容ClassName*/\n  bodyClassName?: string;\n  style?: React.CSSProperties;\n  /**头部样式*/\n  headerStyle?: React.CSSProperties;\n  /**内容样式*/\n  bodyStyle?: React.CSSProperties;\n  /**是否添加边框*/\n  bordered?: boolean;\n}\n/**布局组件*/\nexport declare const FormLayout: React.MemoExoticComponent<\n  (props: FormLayoutProps) => import('react/jsx-runtime').JSX.Element\n>;\nexport interface FormLayoutRowsProps\n  extends React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement> {}\n/**布局组件 占据一整行*/\nexport declare const FormLayoutRows: React.ForwardRefExoticComponent<\n  Omit<FormLayoutRowsProps, 'ref'> & React.RefAttributes<HTMLDivElement>\n>;\n"})}),"\n",(0,r.jsxs)(t.h3,{id:"布局组件内容-类型",children:[(0,r.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#布局组件内容-类型",children:"#"}),"布局组件内容 类型"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"import React from 'react';\nimport { SizeInfo } from '@carefrees/form-utils-react/esm/hooks/useResizeObserver';\nexport interface FormLayoutBodyProps {\n  className?: string;\n  style?: React.CSSProperties;\n  /**列数据*/\n  colCount?: number;\n  /**\n   * @description gap 属性是用来设置网格行与列之间的间隙，该属性是row-gap and column-gap的简写形式。\n   */\n  gap?: string | number;\n  /**\n   * 获取多少行\n   */\n  onGapRow?: (row: number, col: number, target: HTMLDivElement) => void;\n  /**内容大小变化*/\n  onResize?: (size: SizeInfo, target: HTMLDivElement) => void;\n  /**内容*/\n  children?: React.ReactNode;\n}\n/**布局组件-内容区域*/\nexport declare const FormLayoutBody: React.MemoExoticComponent<\n  (props: FormLayoutBodyProps) => import('react/jsx-runtime').JSX.Element\n>;\n"})}),"\n",(0,r.jsxs)(t.h3,{id:"表单项布局组件类型",children:[(0,r.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#表单项布局组件类型",children:"#"}),"表单项布局组件类型"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"import React from 'react';\nexport interface LayoutFormItemProps {\n  /**规则校验失败错误提示位置*/\n  errorLayout?: 'left-bottom' | 'right-bottom' | 'top-right' | 'top-left';\n  /**必填样式*/\n  required?: boolean;\n  /**label显示模式*/\n  labelMode?: 'left' | 'top' | 'between' | 'hide';\n  /**内容*/\n  children?: React.ReactNode;\n  /**只进行规则样式*/\n  onlyRuleStyle?: boolean;\n  label?: React.ReactNode;\n  /**底部提示内容*/\n  helpText?: React.ReactNode;\n  /**额外内容*/\n  extra?: React.ReactNode;\n  /**是否显示label后的冒号*/\n  showColon?: boolean;\n  /**\n   * 表单项占据列数\n   * @default 1\n   */\n  colSpan?: number;\n  /**\n   * 表单项占据行数\n   * @default 1\n   */\n  rowSpan?: number;\n  htmlFor?: string;\n  /**规则验证结果*/\n  validateResult?: {\n    tip: string | (string | undefined)[];\n    isInvalid: boolean;\n  };\n  style?: React.CSSProperties;\n  className?: string;\n  labelStyle?: React.CSSProperties;\n  labelClassName?: string;\n}\n/**布局组件 表单项*/\nexport declare const LayoutFormItem: React.MemoExoticComponent<\n  (props: LayoutFormItemProps) => import('react/jsx-runtime').JSX.Element\n>;\n"})}),"\n",(0,r.jsxs)(t.h3,{id:"表单项参数",children:[(0,r.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#表单项参数",children:"#"}),"表单项参数"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"import { RuleInstanceBase, FormInstanceBase, FormItemInstanceBase } from '@carefrees/form-utils';\nimport { RegisterFormItemOptions } from '@carefrees/form-utils-react-hooks';\nimport React from 'react';\nexport interface FormItemAttrOptions extends RegisterFormItemOptions {\n  /**依赖更新项*/\n  dependencies?: string[];\n  /**通知 只用于校验规则提示 字段 */\n  noticeOnlyRuleDataField?: string[];\n  /**通知父级字段监听方法更新*/\n  isNoticeParentField?: boolean;\n  /**通知watch监听方法更新*/\n  noticeWatchField?: string[];\n  /**是否保护值(不进行表单项组件卸载重置初始值)*/\n  preserve?: boolean;\n  /**重写规则*/\n  useRules?: (ruleInstance: RuleInstanceBase, form: FormInstanceBase, formItemInstance: FormItemInstanceBase) => void;\n  /**输入框属性重写*/\n  useAttrs?: (attrs: any, form: FormInstanceBase, formItemInstance: FormItemInstanceBase) => any;\n  /**输入框属性*/\n  attrs?: any;\n  /**传递组件字段*/\n  valuePropName?: string;\n  /**取值字段(默认和valuePropName值相同)*/\n  getValuePath?: string;\n  /**自定义获取值*/\n  getValueFromEvent?: (event: any, form: FormInstanceBase, formItemInstance: FormItemInstanceBase) => any;\n  /**值格式化*/\n  formatValue?: (value: any, form: FormInstanceBase, formItemInstance: FormItemInstanceBase, event: any) => any;\n  /**触发数据更新之后触发（用于数据联动之类的）*/\n  onAfterUpdate?: (value: any, form: FormInstanceBase, formItemInstance: FormItemInstanceBase, event: any) => void;\n  /**事件名称*/\n  trigger?: string;\n  /**子元素*/\n  children?: React.ReactNode;\n}\n/**表单项参数*/\nexport declare const useFormItemAttr: (options: FormItemAttrOptions) => {\n  children:\n    | string\n    | number\n    | boolean\n    | React.ReactElement<any, string | React.JSXElementConstructor<any>>\n    | Iterable<React.ReactNode>;\n  form: FormInstanceBase<any>;\n  formItemInstance: FormItemInstanceBase;\n  ruleInstance: RuleInstanceBase;\n  onChange: (event: any) => void;\n  htmlFor: string;\n  validateResult: {\n    tip: string | (string | undefined)[];\n    isInvalid: boolean;\n  };\n};\n"})})]})}function h(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:t}=Object.assign({},(0,a.ah)(),e.components);return t?(0,r.jsx)(t,Object.assign({},e,{children:(0,r.jsx)(u,e)})):u(e)}let f=h;h.__RSPRESS_PAGE_META={},h.__RSPRESS_PAGE_META["react%2Freact.mdx"]={toc:[{id:"安装",text:"安装",depth:2},{id:"加载样式",text:"加载样式",depth:2},{id:"使用",text:"使用",depth:2},{id:"基本使用",text:"基本使用",depth:3},{id:"控制隐藏",text:"控制隐藏",depth:3},{id:"表单字段监听",text:"表单字段监听",depth:3},{id:"list-表单项",text:"list 表单项",depth:3},{id:"表单项依赖更新dependencies-参数",text:"表单项依赖更新(dependencies 参数)",depth:3},{id:"布局组件",text:"布局组件",depth:3},{id:"类型",text:"类型",depth:2},{id:"form-表单",text:"Form 表单",depth:3},{id:"formitem-表单项",text:"FormItem 表单项",depth:3},{id:"formlist-表单-list",text:"FormList 表单 List",depth:3},{id:"布局组件-类型",text:"布局组件 类型",depth:3},{id:"布局组件内容-类型",text:"布局组件内容 类型",depth:3},{id:"表单项布局组件类型",text:"表单项布局组件类型",depth:3},{id:"表单项参数",text:"表单项参数",depth:3}],title:"pc & h5",headingTitle:"pc & h5",frontmatter:{}}}}]);